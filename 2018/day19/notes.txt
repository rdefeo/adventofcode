0, 1, 2, 3,  4, 5
a, b, c, d, IP, e

0 addi 4 16 4  : IP += 16  : GOTO 17 to initialize c and e

for b in range(1,e+1):

1 seti 1 1 1   : b = 1

   for d in range(1,e+1):
   
2 seti 1 7 3   : d = 1


3 mulr 1 3 2   : c = b * d
4 eqrr 2 5 2   : c = (c==e)
5 addr 2 4 4   : IP = c+5
6 addi 4 1 4   : IP = 7

        if (b*d == e) GOTO 7
          a += b # our accumulated sum in R0
        else GOTO 8

7 addr 1 0 0   : a = b+a
8 addi 3 1 3   : d += 1
9 gtrr 3 5 2   : c = (d > e)

if (d > e) GOTO 12
else GOTO 2 (3?)

10 addr 4 2 4  : IP += c
11 seti 2 3 4  : IP = 2 # jump IP to 3!

12 addi 1 1 1  : b += 1
13 gtrr 1 5 2  : c = (b > e)

if (b > e) GOTO 14, which jumps to 16, which HALTs
else: GOTO 15, which jumps to 1

14 addr 2 4 4  : IP = c + 14 : GOTO 16
15 seti 1 6 4  : IP = 1 # jump IP to 1!
16 mulr 4 4 4  : IP = 16*16 # HALT


# Initialize e and c
17 addi 5 2 5  : e += 2      e = 2
18 mulr 5 5 5  : e = e*e     e = 4
19 mulr 4 5 5  : e = 19 * e  e = 76
20 muli 5 11 5 : e = 11 * e  e = 836

21 addi 2 1 2  : c += 1      c = 1
22 mulr 2 4 2  : c *= 22     c = 22
23 addi 2 6 2  : c += 6      c = 28
24 addr 5 2 5  : e += c      e = 864

# Part 1: a=0, GOTO 26
# Part 2: a=1, GOTO 27
25 addr 4 0 4  : IP += a
26 seti 0 0 4  : IP = 0 # jump to IP 1!

# Part 2: continue initializing e and c
27 setr 4 5 2  : c = 27      c = 27
28 mulr 2 4 2  : c *= 28     c = 756
29 addr 4 2 2  : c += 29     c = 785
30 mulr 4 2 2  : c *= 30     c = 23550
31 muli 2 14 2 : c *= 14     c = 329700
32 mulr 2 4 2  : c *= 32     c = 10550400
33 addr 5 2 5  : e += c      c = 10551264
34 seti 0 5 0  : a = 0
35 seti 0 2 4  : IP = 0 # jump IP to 1!
